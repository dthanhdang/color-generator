/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './../../routes/__root'
import { Route as AdminImport } from './../../routes/admin'
import { Route as IndexImport } from './../../routes/index'
import { Route as ScalePaletteIndexImport } from './../../routes/scale-palette/index'
import { Route as RandomPaletteIndexImport } from './../../routes/random-palette/index'
import { Route as PalettesExplorerIndexImport } from './../../routes/palettes-explorer/index'
import { Route as PaletteEditorIndexImport } from './../../routes/palette-editor/index'
import { Route as MyPalettesIndexImport } from './../../routes/my-palettes/index'
import { Route as ImagePickerIndexImport } from './../../routes/image-picker/index'
import { Route as HarmonyPaletteIndexImport } from './../../routes/harmony-palette/index'
import { Route as ContrastCheckerIndexImport } from './../../routes/contrast-checker/index'
import { Route as ContactIndexImport } from './../../routes/contact/index'
import { Route as AdminIndexImport } from './../../routes/admin/index'
import { Route as AuthSignUpImport } from './../../routes/auth/sign-up'
import { Route as AuthSignInImport } from './../../routes/auth/sign-in'
import { Route as AuthSignUpIndexImport } from './../../routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './../../routes/auth/sign-in/index'
import { Route as AdminUsersIndexImport } from './../../routes/admin/users/index'
import { Route as AdminPublicPalettesIndexImport } from './../../routes/admin/public-palettes/index'
import { Route as AdminPublicPalettesGenerateIndexImport } from './../../routes/admin/public-palettes/generate/index'

// Create/Update Routes

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ScalePaletteIndexRoute = ScalePaletteIndexImport.update({
  id: '/scale-palette/',
  path: '/scale-palette/',
  getParentRoute: () => rootRoute,
} as any)

const RandomPaletteIndexRoute = RandomPaletteIndexImport.update({
  id: '/random-palette/',
  path: '/random-palette/',
  getParentRoute: () => rootRoute,
} as any)

const PalettesExplorerIndexRoute = PalettesExplorerIndexImport.update({
  id: '/palettes-explorer/',
  path: '/palettes-explorer/',
  getParentRoute: () => rootRoute,
} as any)

const PaletteEditorIndexRoute = PaletteEditorIndexImport.update({
  id: '/palette-editor/',
  path: '/palette-editor/',
  getParentRoute: () => rootRoute,
} as any)

const MyPalettesIndexRoute = MyPalettesIndexImport.update({
  id: '/my-palettes/',
  path: '/my-palettes/',
  getParentRoute: () => rootRoute,
} as any)

const ImagePickerIndexRoute = ImagePickerIndexImport.update({
  id: '/image-picker/',
  path: '/image-picker/',
  getParentRoute: () => rootRoute,
} as any)

const HarmonyPaletteIndexRoute = HarmonyPaletteIndexImport.update({
  id: '/harmony-palette/',
  path: '/harmony-palette/',
  getParentRoute: () => rootRoute,
} as any)

const ContrastCheckerIndexRoute = ContrastCheckerIndexImport.update({
  id: '/contrast-checker/',
  path: '/contrast-checker/',
  getParentRoute: () => rootRoute,
} as any)

const ContactIndexRoute = ContactIndexImport.update({
  id: '/contact/',
  path: '/contact/',
  getParentRoute: () => rootRoute,
} as any)

const AdminIndexRoute = AdminIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AdminRoute,
} as any)

const AuthSignUpRoute = AuthSignUpImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInRoute = AuthSignInImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthSignUpRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthSignInRoute,
} as any)

const AdminUsersIndexRoute = AdminUsersIndexImport.update({
  id: '/users/',
  path: '/users/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPublicPalettesIndexRoute = AdminPublicPalettesIndexImport.update({
  id: '/public-palettes/',
  path: '/public-palettes/',
  getParentRoute: () => AdminRoute,
} as any)

const AdminPublicPalettesGenerateIndexRoute =
  AdminPublicPalettesGenerateIndexImport.update({
    id: '/public-palettes/generate/',
    path: '/public-palettes/generate/',
    getParentRoute: () => AdminRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpImport
      parentRoute: typeof rootRoute
    }
    '/admin/': {
      id: '/admin/'
      path: '/'
      fullPath: '/admin/'
      preLoaderRoute: typeof AdminIndexImport
      parentRoute: typeof AdminImport
    }
    '/contact/': {
      id: '/contact/'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactIndexImport
      parentRoute: typeof rootRoute
    }
    '/contrast-checker/': {
      id: '/contrast-checker/'
      path: '/contrast-checker'
      fullPath: '/contrast-checker'
      preLoaderRoute: typeof ContrastCheckerIndexImport
      parentRoute: typeof rootRoute
    }
    '/harmony-palette/': {
      id: '/harmony-palette/'
      path: '/harmony-palette'
      fullPath: '/harmony-palette'
      preLoaderRoute: typeof HarmonyPaletteIndexImport
      parentRoute: typeof rootRoute
    }
    '/image-picker/': {
      id: '/image-picker/'
      path: '/image-picker'
      fullPath: '/image-picker'
      preLoaderRoute: typeof ImagePickerIndexImport
      parentRoute: typeof rootRoute
    }
    '/my-palettes/': {
      id: '/my-palettes/'
      path: '/my-palettes'
      fullPath: '/my-palettes'
      preLoaderRoute: typeof MyPalettesIndexImport
      parentRoute: typeof rootRoute
    }
    '/palette-editor/': {
      id: '/palette-editor/'
      path: '/palette-editor'
      fullPath: '/palette-editor'
      preLoaderRoute: typeof PaletteEditorIndexImport
      parentRoute: typeof rootRoute
    }
    '/palettes-explorer/': {
      id: '/palettes-explorer/'
      path: '/palettes-explorer'
      fullPath: '/palettes-explorer'
      preLoaderRoute: typeof PalettesExplorerIndexImport
      parentRoute: typeof rootRoute
    }
    '/random-palette/': {
      id: '/random-palette/'
      path: '/random-palette'
      fullPath: '/random-palette'
      preLoaderRoute: typeof RandomPaletteIndexImport
      parentRoute: typeof rootRoute
    }
    '/scale-palette/': {
      id: '/scale-palette/'
      path: '/scale-palette'
      fullPath: '/scale-palette'
      preLoaderRoute: typeof ScalePaletteIndexImport
      parentRoute: typeof rootRoute
    }
    '/admin/public-palettes/': {
      id: '/admin/public-palettes/'
      path: '/public-palettes'
      fullPath: '/admin/public-palettes'
      preLoaderRoute: typeof AdminPublicPalettesIndexImport
      parentRoute: typeof AdminImport
    }
    '/admin/users/': {
      id: '/admin/users/'
      path: '/users'
      fullPath: '/admin/users'
      preLoaderRoute: typeof AdminUsersIndexImport
      parentRoute: typeof AdminImport
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/'
      fullPath: '/auth/sign-in/'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof AuthSignInImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/'
      fullPath: '/auth/sign-up/'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof AuthSignUpImport
    }
    '/admin/public-palettes/generate/': {
      id: '/admin/public-palettes/generate/'
      path: '/public-palettes/generate'
      fullPath: '/admin/public-palettes/generate'
      preLoaderRoute: typeof AdminPublicPalettesGenerateIndexImport
      parentRoute: typeof AdminImport
    }
  }
}

// Create and export the route tree

interface AdminRouteChildren {
  AdminIndexRoute: typeof AdminIndexRoute
  AdminPublicPalettesIndexRoute: typeof AdminPublicPalettesIndexRoute
  AdminUsersIndexRoute: typeof AdminUsersIndexRoute
  AdminPublicPalettesGenerateIndexRoute: typeof AdminPublicPalettesGenerateIndexRoute
}

const AdminRouteChildren: AdminRouteChildren = {
  AdminIndexRoute: AdminIndexRoute,
  AdminPublicPalettesIndexRoute: AdminPublicPalettesIndexRoute,
  AdminUsersIndexRoute: AdminUsersIndexRoute,
  AdminPublicPalettesGenerateIndexRoute: AdminPublicPalettesGenerateIndexRoute,
}

const AdminRouteWithChildren = AdminRoute._addFileChildren(AdminRouteChildren)

interface AuthSignInRouteChildren {
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
}

const AuthSignInRouteChildren: AuthSignInRouteChildren = {
  AuthSignInIndexRoute: AuthSignInIndexRoute,
}

const AuthSignInRouteWithChildren = AuthSignInRoute._addFileChildren(
  AuthSignInRouteChildren,
)

interface AuthSignUpRouteChildren {
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const AuthSignUpRouteChildren: AuthSignUpRouteChildren = {
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

const AuthSignUpRouteWithChildren = AuthSignUpRoute._addFileChildren(
  AuthSignUpRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRouteWithChildren
  '/auth/sign-up': typeof AuthSignUpRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/contact': typeof ContactIndexRoute
  '/contrast-checker': typeof ContrastCheckerIndexRoute
  '/harmony-palette': typeof HarmonyPaletteIndexRoute
  '/image-picker': typeof ImagePickerIndexRoute
  '/my-palettes': typeof MyPalettesIndexRoute
  '/palette-editor': typeof PaletteEditorIndexRoute
  '/palettes-explorer': typeof PalettesExplorerIndexRoute
  '/random-palette': typeof RandomPaletteIndexRoute
  '/scale-palette': typeof ScalePaletteIndexRoute
  '/admin/public-palettes': typeof AdminPublicPalettesIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/admin/public-palettes/generate': typeof AdminPublicPalettesGenerateIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminIndexRoute
  '/contact': typeof ContactIndexRoute
  '/contrast-checker': typeof ContrastCheckerIndexRoute
  '/harmony-palette': typeof HarmonyPaletteIndexRoute
  '/image-picker': typeof ImagePickerIndexRoute
  '/my-palettes': typeof MyPalettesIndexRoute
  '/palette-editor': typeof PaletteEditorIndexRoute
  '/palettes-explorer': typeof PalettesExplorerIndexRoute
  '/random-palette': typeof RandomPaletteIndexRoute
  '/scale-palette': typeof ScalePaletteIndexRoute
  '/admin/public-palettes': typeof AdminPublicPalettesIndexRoute
  '/admin/users': typeof AdminUsersIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/admin/public-palettes/generate': typeof AdminPublicPalettesGenerateIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRouteWithChildren
  '/auth/sign-in': typeof AuthSignInRouteWithChildren
  '/auth/sign-up': typeof AuthSignUpRouteWithChildren
  '/admin/': typeof AdminIndexRoute
  '/contact/': typeof ContactIndexRoute
  '/contrast-checker/': typeof ContrastCheckerIndexRoute
  '/harmony-palette/': typeof HarmonyPaletteIndexRoute
  '/image-picker/': typeof ImagePickerIndexRoute
  '/my-palettes/': typeof MyPalettesIndexRoute
  '/palette-editor/': typeof PaletteEditorIndexRoute
  '/palettes-explorer/': typeof PalettesExplorerIndexRoute
  '/random-palette/': typeof RandomPaletteIndexRoute
  '/scale-palette/': typeof ScalePaletteIndexRoute
  '/admin/public-palettes/': typeof AdminPublicPalettesIndexRoute
  '/admin/users/': typeof AdminUsersIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/admin/public-palettes/generate/': typeof AdminPublicPalettesGenerateIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/admin/'
    | '/contact'
    | '/contrast-checker'
    | '/harmony-palette'
    | '/image-picker'
    | '/my-palettes'
    | '/palette-editor'
    | '/palettes-explorer'
    | '/random-palette'
    | '/scale-palette'
    | '/admin/public-palettes'
    | '/admin/users'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/admin/public-palettes/generate'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/contact'
    | '/contrast-checker'
    | '/harmony-palette'
    | '/image-picker'
    | '/my-palettes'
    | '/palette-editor'
    | '/palettes-explorer'
    | '/random-palette'
    | '/scale-palette'
    | '/admin/public-palettes'
    | '/admin/users'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/admin/public-palettes/generate'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/admin/'
    | '/contact/'
    | '/contrast-checker/'
    | '/harmony-palette/'
    | '/image-picker/'
    | '/my-palettes/'
    | '/palette-editor/'
    | '/palettes-explorer/'
    | '/random-palette/'
    | '/scale-palette/'
    | '/admin/public-palettes/'
    | '/admin/users/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/admin/public-palettes/generate/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRouteWithChildren
  AuthSignInRoute: typeof AuthSignInRouteWithChildren
  AuthSignUpRoute: typeof AuthSignUpRouteWithChildren
  ContactIndexRoute: typeof ContactIndexRoute
  ContrastCheckerIndexRoute: typeof ContrastCheckerIndexRoute
  HarmonyPaletteIndexRoute: typeof HarmonyPaletteIndexRoute
  ImagePickerIndexRoute: typeof ImagePickerIndexRoute
  MyPalettesIndexRoute: typeof MyPalettesIndexRoute
  PaletteEditorIndexRoute: typeof PaletteEditorIndexRoute
  PalettesExplorerIndexRoute: typeof PalettesExplorerIndexRoute
  RandomPaletteIndexRoute: typeof RandomPaletteIndexRoute
  ScalePaletteIndexRoute: typeof ScalePaletteIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRouteWithChildren,
  AuthSignInRoute: AuthSignInRouteWithChildren,
  AuthSignUpRoute: AuthSignUpRouteWithChildren,
  ContactIndexRoute: ContactIndexRoute,
  ContrastCheckerIndexRoute: ContrastCheckerIndexRoute,
  HarmonyPaletteIndexRoute: HarmonyPaletteIndexRoute,
  ImagePickerIndexRoute: ImagePickerIndexRoute,
  MyPalettesIndexRoute: MyPalettesIndexRoute,
  PaletteEditorIndexRoute: PaletteEditorIndexRoute,
  PalettesExplorerIndexRoute: PalettesExplorerIndexRoute,
  RandomPaletteIndexRoute: RandomPaletteIndexRoute,
  ScalePaletteIndexRoute: ScalePaletteIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/auth/sign-in",
        "/auth/sign-up",
        "/contact/",
        "/contrast-checker/",
        "/harmony-palette/",
        "/image-picker/",
        "/my-palettes/",
        "/palette-editor/",
        "/palettes-explorer/",
        "/random-palette/",
        "/scale-palette/"
      ]
    },
    "/": {
      "filePath": "index.ts"
    },
    "/admin": {
      "filePath": "admin.tsx",
      "children": [
        "/admin/",
        "/admin/public-palettes/",
        "/admin/users/",
        "/admin/public-palettes/generate/"
      ]
    },
    "/auth/sign-in": {
      "filePath": "auth/sign-in.ts",
      "children": [
        "/auth/sign-in/"
      ]
    },
    "/auth/sign-up": {
      "filePath": "auth/sign-up.ts",
      "children": [
        "/auth/sign-up/"
      ]
    },
    "/admin/": {
      "filePath": "admin/index.ts",
      "parent": "/admin"
    },
    "/contact/": {
      "filePath": "contact/index.ts"
    },
    "/contrast-checker/": {
      "filePath": "contrast-checker/index.ts"
    },
    "/harmony-palette/": {
      "filePath": "harmony-palette/index.ts"
    },
    "/image-picker/": {
      "filePath": "image-picker/index.ts"
    },
    "/my-palettes/": {
      "filePath": "my-palettes/index.tsx"
    },
    "/palette-editor/": {
      "filePath": "palette-editor/index.tsx"
    },
    "/palettes-explorer/": {
      "filePath": "palettes-explorer/index.tsx"
    },
    "/random-palette/": {
      "filePath": "random-palette/index.ts"
    },
    "/scale-palette/": {
      "filePath": "scale-palette/index.ts"
    },
    "/admin/public-palettes/": {
      "filePath": "admin/public-palettes/index.tsx",
      "parent": "/admin"
    },
    "/admin/users/": {
      "filePath": "admin/users/index.tsx",
      "parent": "/admin"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx",
      "parent": "/auth/sign-in"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx",
      "parent": "/auth/sign-up"
    },
    "/admin/public-palettes/generate/": {
      "filePath": "admin/public-palettes/generate/index.ts",
      "parent": "/admin"
    }
  }
}
ROUTE_MANIFEST_END */
