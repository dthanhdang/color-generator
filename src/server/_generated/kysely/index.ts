/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface _CfMETADATA {
  key: Generated<number | null>;
  value: Buffer | null;
}

export interface D1Migrations {
  appliedAt: Generated<string>;
  id: Generated<number | null>;
  name: string | null;
}

export interface Otp {
  code: string;
  email: string;
  validity: string;
}

export interface PrivatePalette {
  colors: string;
  id: Generated<number>;
  userId: number;
}

export interface PublicPalette {
  colors: string;
  createdAt: string;
  id: Generated<number>;
  likes: number;
}

export interface User {
  email: string;
  firstName: string;
  id: Generated<number>;
  lastName: string;
  lastSignInDate: string;
  role: string;
  signUpDate: string;
}

export interface UserFavoritePalette {
  id: Generated<number>;
  paletteId: number;
  userId: number;
}

export interface DB {
  _CfMETADATA: _CfMETADATA;
  d1Migrations: D1Migrations;
  otp: Otp;
  privatePalette: PrivatePalette;
  publicPalette: PublicPalette;
  user: User;
  userFavoritePalette: UserFavoritePalette;
}
